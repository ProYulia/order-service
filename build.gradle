plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.4'
    id 'io.spring.dependency-management' version '1.1.0'
    id "org.openapi.generator" version "6.3.0"

}

group = 'ru.yandex'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.mapstruct:mapstruct:1.5.4.Final'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

    implementation 'io.github.resilience4j:resilience4j-ratelimiter:2.0.2'
    implementation 'io.github.resilience4j:resilience4j-spring-boot2:2.0.2'



    runtimeOnly 'org.postgresql:postgresql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.testcontainers:testcontainers:1.18.0"
    testImplementation 'org.testcontainers:postgresql:1.18.0'


    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'

    testCompileOnly 'org.projectlombok:lombok:1.18.26'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'

    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.4.Final'
}



tasks.named('test') {
    useJUnitPlatform()

}

openApiGenerate {
    inputSpec = 'src/main/resources/openapi.json'
    outputDir = 'build/swagger'
    generatorName = 'spring'
    library = 'spring-boot'
    apiPackage = 'org.openapi.example.api'
    invokerPackage = 'org.openapi.example.invoker'
    modelPackage = 'org.openapi.example.model'
}
